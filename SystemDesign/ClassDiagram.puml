@startuml ExpenseTracker - Group5

package "DOMAIN LAYER" {

    package "Entities" {
        interface EntityBase {
            +Guid Id
        }

        class User implements EntityBase {
            +string Name
            +string Email
            +string PasswordHash
            +DateTime CreatedAt
        }

        class Expense implements EntityBase {
            +Guid UserId
            +string Currency
            +decimal Amount
            +string Description
            +string Category
            +DateTime Date
            +DateTime CreatedAt
            +boolean IsRecurrent
            +DateTime LastCalculation
        }

        class Income implements EntityBase {
            +Guid UserId
            +string Currency
            +decimal Amount
            +string Source
            +DateTime Date
            +DateTime CreatedAt
        }

        class Budget implements EntityBase {
            +Guid UserId
            +DateTime Month
            +string Currency
            +decimal Amount
            +decimal CurrentAmount
        }

        class Goal implements EntityBase {
            +Guid UserId
            +string Currency
            +decimal GoalAmount
            +DateTime Deadline
            +decimal CurrentAmount
            +DateTime CreatedAt
        }

    }

    package "Repositories" {
        interface IRepository<T extends EntityBase> {
            +bool Save(T item)
            +bool Update(T item)
            +bool Delete(T item)
            +T GetById(Guid itemId)
            +List<T> GetAll()
        }

        interface IUserRepository extends IRepository<User> {
        }

        interface IExpenseRepository extends IRepository<Expense> {
        }

        interface IIncomeRepository extends IRepository<Income> {
        }

        interface IBudgetRepository extends IRepository<Budget> {
        }

        interface IGoalRepository extends IRepository<Goal> {
        }
    }

    package "Validators" {
        interface IValidator<T> {
            +void Validate(T entity)
        }

        interface IUserValidator extends IValidator<User> {
            +void Validate(User user)
        }

        interface IExpenseValidator extends IValidator<Expense> {
            +void Validate(Expense expense)
        }

        interface IIncomeValidator extends IValidator<Income> {
            +void Validate(Income income)
        }

        interface IBudgetValidator extends IValidator<Budget> {
            +void Validate(Budget budget)
        }

        interface IGoalValidator extends IValidator<Goal> {
            +void Validate(Goal goal)
        }
    }

}

@enduml